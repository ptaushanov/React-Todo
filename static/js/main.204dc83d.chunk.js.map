{"version":3,"sources":["Create.js","TodoList.js","useFetch.js","Home.js","Navbar.js","TaskDetails.js","App.js","index.js"],"names":["Create","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","_useState5","_useState6","importance","setImportance","_useState7","_useState8","isPending","setIsPending","_useState9","_useState10","error","setError","history","useHistory","_jsxs","className","children","_jsx","onSubmit","e","preventDefault","fetch","headers","method","body","JSON","stringify","then","push","catch","err","type","value","onChange","target","message","disabled","TodoList","props","todos","map","todo","Link","to","id","useFetch","url","data","setData","isLoading","setIsLoading","useEffect","abortController","AbortController","setTimeout","signal","res","ok","Error","json","name","abort","Home","_useFetch","_Fragment","Navbar","TaskDetails","useParams","task","split","par","onClick","console","App","Router","Switch","Route","exact","path","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.204dc83d.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst Create = () => {\r\n    const [ title, setTitle ] = useState('');\r\n    const [ description, setDescription ] = useState('');\r\n    const [ importance, setImportance ] = useState('');\r\n\r\n    const [isPending, setIsPending] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setIsPending(true);\r\n\r\n        fetch(\"http://localhost:8000/todos\", {\r\n            headers: { \"Content-Type\": \"application/json\"},\r\n            method: \"POST\",\r\n            body: JSON.stringify({ title, description, importance })\r\n        })\r\n        .then(()=> {\r\n            setIsPending(false)\r\n            setError(null)\r\n            history.push(\"/\")\r\n        })\r\n        .catch(err => {\r\n            setIsPending(false)\r\n            setError(err)\r\n        })\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className=\"create-task\">\r\n            <h2>Create task</h2>\r\n\r\n            <form onSubmit = { handleSubmit }>\r\n                <label>Title: </label>\r\n                <input \r\n                type=\"text\"\r\n                value={ title }\r\n                onChange = { e => setTitle(e.target.value) }\r\n                />\r\n\r\n                <label>Description: </label>\r\n                <textarea \r\n                type=\"text\"\r\n                value={ description }\r\n                onChange = { e => setDescription(e.target.value) }\r\n                ></textarea>\r\n\r\n                <label>Importance: </label>\r\n                <input \r\n                type=\"text\"\r\n                value={ importance }\r\n                onChange = { e => setImportance(e.target.value) }\r\n                />\r\n\r\n                { error && <p className=\"event\">{ error.message }</p> }\r\n                { !isPending && <button>Add task</button> }\r\n                { isPending && <button disabled>Pending ...</button> }\r\n            </form>\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Create;","import { Link } from \"react-router-dom\"\r\n\r\nconst TodoList = (props) => {\r\n    const { todos } = props\r\n\r\n    return ( \r\n        <div className=\"todo-list\">\r\n            { todos.map(todo => (\r\n                <div className=\"todo-element\" key={ todo.id }>\r\n                    <Link to= {\"/details/\" + todo.id} >\r\n                        <h2>Task: {todo.title}</h2>\r\n                        <p>Importance: {todo.importance}</p>\r\n                    </Link>\r\n                </div>\r\n            )) }\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TodoList;","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const abortController = new AbortController();\r\n\r\n        setIsLoading(true)\r\n        setTimeout(() => {\r\n            fetch(url, {\r\n                signal: abortController.signal\r\n            })\r\n            .then(res => {\r\n                if(!res.ok){\r\n                    throw Error(\"Can't find data for that resource\")\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(data => {\r\n                setError(null)\r\n                setData(data)\r\n                setIsLoading(false)\r\n            })\r\n            .catch(err => {\r\n                if(err.name !== \"AbortError\"){\r\n                    setIsLoading(false)\r\n                    setError(err)\r\n                }\r\n            })\r\n        },100);\r\n\r\n        return () => { abortController.abort() }\r\n    }, [url])\r\n\r\n\r\n    return {data, isLoading, error};\r\n}\r\n \r\nexport default useFetch;","import TodoList from './TodoList'\r\nimport useFetch from './useFetch'\r\n\r\nconst Home = () => {\r\n    const { data: todos, isLoading, error } = useFetch(\"http://localhost:8000/todos\")\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {isLoading && <p className=\"event\" >Loading TODO's ...</p>}\r\n            {error && (\r\n                <>\r\n                    <p className='note'>Note: Please use the app locally with json-server started!</p>\r\n                    <p className=\"event\"> {error.message} </p>\r\n                </>)}\r\n            {todos && <TodoList todos={todos} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return ( \r\n        <nav className=\"navbar\">\r\n            <Link to=\"/\">TODOs</Link>\r\n            <Link to=\"/create\">Create task</Link>\r\n        </nav>            \r\n     );\r\n}\r\n \r\nexport default Navbar;","import useFetch from \"./useFetch\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\n\r\nconst TaskDetails = () => {\r\n    \r\n    const { id } = useParams();\r\n    const { data:task, isLoading, error } = useFetch(\"http://localhost:8000/todos/\" + id)\r\n    const history = useHistory();\r\n\r\n    const handleDelete = () => {\r\n        fetch(\"http://localhost:8000/todos/\" + id, {\r\n            method: \"DELETE\"\r\n        }).then(() => {\r\n            history.push(\"/\")\r\n        })\r\n        .catch(err => {\r\n            console.error(err)\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"task-details\">\r\n            { isLoading && <p className = \"event\"> Loading task details ...</p> }\r\n            { error && <p className = \"event\">{ error.message }</p>}\r\n            { task && (\r\n                <div className=\"content\">\r\n                    <h2>{ task.title }</h2>\r\n                    { task.description.split(\"\\n\").map( par => (\r\n                        <p>{par}</p>\r\n                    )) }\r\n                    <button onClick = { handleDelete }>Delete task</button>\r\n                </div>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TaskDetails;","import { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Create from \"./Create\"\r\nimport Home from \"./Home\"\r\nimport Navbar from \"./Navbar\"\r\nimport TaskDetails from \"./TaskDetails\"\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/create\">\r\n              <Create />\r\n            </Route>\r\n            <Route path=\"/details/:id\">\r\n              <TaskDetails />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}